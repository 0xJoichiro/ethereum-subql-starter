specVersion: "1.0.0"

name: "uniswap-v3"
version: "0.0.1"
runner:
  node:
    name: "@subql/node-ethereum"
    version: "*"
  query:
    name: "@subql/query"
    version: "*"
description: "This project can be use as a starting point for developing your new Ethereum SubQuery project"
repository: "https://github.com/subquery/ethereum-subql-starter"

schema:
  file: "./schema.graphql"

network:
  endpoint: https://mainnet.infura.io/v3/c3772903689441d290c68698bb022ba6
  chainId: "1"
  dictionary: "https://eth-dict.api.onfinality.io/"

dataSources:
  # ethereum/events
  - kind: ethereum/Runtime
    # Should start from the first instance of uniswap
    startBlock: 12369621
    # What is the difference between options and assets
    options:
      # Must be a key of assets
      # TODO: what is Factory abi ?
      abi: Factory
      address: "0x1F98431c8aD98523631AE4a59f267346ea31F984"
    assets:
      # TODO: Multiple abis
      Factory:
        file: "./abis/Factory.json"
      ERC20:
        file: "./abis/ERC20.json"
      ERC20SymbolBytes:
        file: "./abis/ERC20SymbolBytes.json"
      ERC20NameBytes:
        file: "./abis/ERC20NameBytes.json"
      Pool:
        file: "./abis/pool.json"
    mapping:
      file: "./dist/index.js"
      handlers:
        - handler: handlePoolCreated
          # TODO: Find out eth types
          kind: ethereum/TransactionHandler
          filter:
            function: PoolCreated(indexed address,indexed address,indexed uint24,int24,address)
    # ethereum/contract
  - kind: ethereum/Runtime
    startBlock: 12369651
    options:
      abi: NonfungiblePositionManager
      address: '0xC36442b4a4522E871399CD717aBDD847Ab11FE88'
    assets:
      NonfungiblePositionManager:
        file: ./abis/NonfungiblePositionManager.json
      Pool:
        file: ./abis/pool.json
      Factory:
        file: ./abis/factory.json
      ERC20:
        file: ./abis/ERC20.json
    mapping:
      file: "./dist/index.js"
      handlers:
        - handler: handleIncreaseLiquidity
          # TODO: Find out eth types
#          kind: ethereum/TransactionHandler
          filter:
            function: IncreaseLiquidity(indexed uint256,uint128,uint256,uint256)
        - handler: handleDecreaseLiquidity
          # TODO: Find out eth types
#          kind: ethereum/TransactionHandler
          filter:
            function: DecreaseLiquidity(indexed uint256,uint128,uint256,uint256)
        - handler: handleCollect
          # TODO: Find out eth types
#          kind: ethereum/TransactionHandler
          filter:
            function: Collect(indexed uint256,address,uint256,uint256)
        - handler: handleTransfer
          # TODO: Find out eth types
#          kind: ethereum/TransactionHandler
          filter:
            function: Transfer(indexed address,indexed address,indexed uint256)
templates:
  - name: Pool
    # TODO: Find out how to fill this in
    kind: ethereum/Runtime
    assets:
      Pool:
        file: ./abis/pool.json
      Factory:
        file: ./abis/factory.json
      ERC20:
        file: ./abis/ERC20.json
    mapping:
      file: "./dist/index.js"
      handlers:
        - handler: handleInitialize
          kind: ethereum/Runtime
          filter:
            function: Initialize(uint160,int24)
        - handler: handleSwap
          kind: ethereum/Runtime
          filter:
            function: Swap(indexed address,indexed address,int256,int256,uint160,uint128,int24)
        - handler: handleMint
          kind: ethereum/Runtime
          filter:
            function: Mint(address,indexed address,indexed int24,indexed int24,uint128,uint256,uint256)
        - handler: handleBurn
          kind: ethereum/Runtime
          filter:
            function: Burn(indexed address,indexed int24,indexed int24,uint128,uint256,uint256)
        - handler: handleFlash
          kind: ethereum/Runtime
          filter:
            function: Flash(indexed address,indexed address,uint256,uint256,uint256,uint256)





